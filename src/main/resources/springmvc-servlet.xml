<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd"
	default-lazy-init="true">

    <mvc:annotation-driven>
	  <mvc:argument-resolvers>
	    <bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
	  </mvc:argument-resolvers>
	</mvc:annotation-driven>
  
    <mvc:interceptors>
	    <!-- On pre-handle, resolve the device that originated the web request -->
	    <bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
	</mvc:interceptors>
    
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.xpos.controller" />

    <context:component-scan base-package="com.xpos.api" />
                                  
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
		  <list>
		   <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		  </list>
		</property>
	</bean>
	
	<!-- Device aware view resolving -->  
	<bean id="viewResolver" class="org.springframework.mobile.device.view.LiteDeviceDelegatingViewResolver">
	    <constructor-arg>
	        <!-- 配置freeMarker视图解析器 -->
			<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
			    <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
			    <property name="contentType" value="text/html; charset=utf-8" />
			    <property name="cache" value="true" />
			    <property name="prefix" value="" />
			    <property name="suffix" value=".ftl" />
			    <property name="order" value="2"/>
			    <!-- 
			    <property name="attributesMap">
		        	<map>
						<entry key="basicDataRender"><bean class="com.xpos.freemarker.BasicDataRender" /></entry>
					</map>
		        </property>
		         -->
		        <property name="exposeSpringMacroHelpers" value="true"/>
		        <property name="exposeRequestAttributes" value="false"/>
		        <property name="exposeSessionAttributes" value="true"/>
		        <property name="requestContextAttribute" value="request"/>   
			</bean>
	    </constructor-arg>
	    <property name="normalPrefix" value="device-pc/" />
	    <property name="mobilePrefix" value="device-pc/" />
	    <property name="tabletPrefix" value="device-pc/" />
	</bean>
	 

   <!-- <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/api/**"/>
            <bean class="com.xkeshi.interceptor.APIInterceptor"/>
        </mvc:interceptor>
	</mvc:interceptors>-->
	
	<!-- 使用spring mvc拦截器 -->  
 	<mvc:interceptors>  
	     <bean class="com.xkeshi.interceptor.form.AvoidDuplicateSubmissionInterceptor" />  
	</mvc:interceptors>   
	
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<!-- set the max upload size100MB -->
	    <property name="maxUploadSize">
	              <value>104857600</value>
	    </property>
	    <property name="maxInMemorySize">
	        <value>4096</value>
	    </property>
	</bean>  
    
    <!--
        - This bean resolves specific types of exceptions to corresponding logical view names for error views.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- view name resolved using bean of type InternalResourceViewResolver (declared in mvc-view-config.xml) -->
        <property name="defaultErrorView" value="exception"/>
        <!-- needed otherwise exceptions won't be logged anywhere -->
        <property name="exceptionMappings">
            <props>
                <prop key="com.xpos.common.exception.GenericException">error/error</prop>
                <prop key="java.lang.Exception">error/error</prop>
            </props>
        </property>
    </bean>

</beans>